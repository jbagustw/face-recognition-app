#!/bin/bash

# Face Recognition App Help Script

echo "ü§ñ Face Recognition App - Help Guide"
echo "====================================="
echo ""

echo "üìã Available Commands:"
echo ""

echo "üîß Development:"
echo "  npm start          - Start development server"
echo "  npm run build      - Build for production"
echo "  npm test           - Run tests"
echo "  npm run lint       - Run linter"
echo ""

echo "üöÄ Scripts:"
echo "  ./scripts/setup.sh     - Initial setup"
echo "  ./scripts/dev.sh       - Start development"
echo "  ./scripts/test.sh      - Run all tests"
echo "  ./scripts/lint.sh      - Run linting"
echo "  ./scripts/prod.sh      - Production build"
echo "  ./scripts/deploy.sh    - Deploy to production"
echo "  ./scripts/backup.sh    - Create backup"
echo "  ./scripts/monitor.sh   - Monitor app"
echo "  ./scripts/cleanup.sh   - Clean up files"
echo "  ./scripts/help.sh      - Show this help"
echo ""

echo "üê≥ Docker:"
echo "  docker build -t face-recognition-app ."
echo "  docker run -p 3000:80 face-recognition-app"
echo "  docker-compose up"
echo ""

echo "üìö Documentation:"
echo "  README.md           - Main documentation"
echo "  DEPLOYMENT.md       - Deployment guide"
echo "  CONTRIBUTING.md     - Contributing guide"
echo "  SECURITY.md         - Security policy"
echo "  CHANGELOG.md        - Version history"
echo ""

echo "üîß Configuration:"
echo "  .env.local          - Environment variables"
echo "  tailwind.config.js  - Tailwind CSS config"
echo "  vercel.json         - Vercel deployment config"
echo "  nginx.conf          - Nginx configuration"
echo ""

echo "üìÅ Project Structure:"
echo "  src/                - Source code"
echo "  public/             - Static files"
echo "  scripts/            - Utility scripts"
echo "  .github/            - GitHub Actions"
echo "  backups/            - Backup files"
echo ""

echo "üåê Deployment Options:"
echo "  Vercel              - Recommended (free tier)"
echo "  Netlify             - Alternative (free tier)"
echo "  Firebase Hosting    - Google's platform"
echo "  GitHub Pages        - Free static hosting"
echo "  Docker              - Container deployment"
echo ""

echo "üîí Security Features:"
echo "  HTTPS enforcement   - Required for camera access"
echo "  Input validation    - Sanitize user inputs"
echo "  Error handling      - Graceful degradation"
echo "  Security headers    - XSS protection"
echo ""

echo "üìä Monitoring:"
echo "  Health checks       - App status monitoring"
echo "  Error tracking      - Bug reporting"
echo "  Performance metrics - Load time tracking"
echo "  Usage analytics     - User behavior tracking"
echo ""

echo "üõ†Ô∏è Troubleshooting:"
echo ""

echo "Camera not working:"
echo "  - Check browser permissions"
echo "  - Ensure HTTPS is enabled"
echo "  - Try different browser"
echo "  - Check camera availability"
echo ""

echo "Face detection issues:"
echo "  - Ensure good lighting"
echo "  - Face should be clearly visible"
echo "  - Adjust confidence threshold"
echo "  - Check model loading"
echo ""

echo "Build errors:"
echo "  - Clear node_modules and reinstall"
echo "  - Check Node.js version (16+)"
echo "  - Verify all dependencies"
echo "  - Check for syntax errors"
echo ""

echo "Deployment issues:"
echo "  - Check build output"
echo "  - Verify environment variables"
echo "  - Check deployment logs"
echo "  - Test locally first"
echo ""

echo "üìû Support:"
echo "  - GitHub Issues     - Bug reports"
echo "  - GitHub Discussions - Questions"
echo "  - Security Email    - Security issues"
echo "  - Documentation     - Self-help"
echo ""

echo "üéØ Quick Start:"
echo "1. Run: ./scripts/setup.sh"
echo "2. Run: npm start"
echo "3. Open: http://localhost:3000"
echo "4. Allow camera access"
echo "5. Start using the app!"
echo ""

echo "‚ú® Happy coding!" 